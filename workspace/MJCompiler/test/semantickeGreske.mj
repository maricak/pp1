//Test 303

program test_303

const int cinilac = 's', delilac = 3;
enum VrstaPredmeta{ SFERA, KVADAR = 0, KVADAR = 6 , SFERA=8}

interface IPredmet2 {
	int zapremina(int k);
}

interface IPredmet {
	int zapremina();
	int Q();
}
class Predmet extends NemaKlase implements IPredmet, IPredmet2, IGreska
{
	int tezina;
	VrstaPredmeta vrsta;
	{
		void postaviTezinu(int tezina) {
			this.tezina = tezina;
		}  
		void ucitajTezinu() { 
			read(tezina); 
		}
		//int zapremina() { 
		//	return 0;
		//}
		int Q(int t) {
			return zapremina() * tezina;
		}
		void postaviVrstu(VrstaPredmeta vrsta) {
			this.vrsta = vrsta;
		}
	}
}

class Sfera extends int implements int
{
	int r;
	{
		void postaviTezinu(int tezina) {
			this.tezina = tezina; 
			vrsta = VrstaPredmeta.SFERA;
		}
		void postaviPoluprecnik(int r) {
			this.r = r; 
			postaviVrstu(VrstaPredmeta.SFERA);
		}
		int zapremina() int z;{
			z = cinilac;
			return z *(r/delilac);
		}
	}
}

class Kvadar extends Predmet
{
	int a, b, c;
	{
		void postaviTezinu(int tezina) {
			this.tezina = tezina; 
			vrsta = VrstaPredmeta.KVADAR;
		}
		void postaviStranice(int a, int b, int c) {
			this.a = a; 
			this.b = b; 
			this.c = c; 
			vrsta = VrstaPredmeta.KVADAR;
		}
		int zapremina() int z; {
			z = a * b * c;
			return z;
		}
	}
}

int zapreminaK, zapreminaS;
int tezinaK, tezinaS;
{

	void ispis(Predmet p) 	{
		if(p.vrsta == VrstaPredmeta.SFERA) 
			print('S');
		else if(p.vrsta == VrstaPredmeta.KVADAR) 
			print('K');

		print(eol); 
		print(p.tezina);
	}
		
	void main() 
		Predmet predmeti[]; IPredmet interPredmeti[]; int i; 
		Sfera s1, s2, s3; Kvadar k1, k2, k3; int t; {
		
		predmeti = new Predmet[true];
		interPredmeti = new IPredmet[6];
		s1 = new Sfera;
		s2 = new Sfera;
		s3 = new Sfera;
		
		k1 = new Kvadar;
		k2 = new Kvadar;
		k3 = new Kvadar;

		s1.postaviPoluprecnik(1);
		s2.postaviPoluprecnik(2);
		s3.postaviPoluprecnik(3);

		k1.postaviStranice(1,2,3);
		k2.postaviStranice(2,3,4);
		k3.postaviStranice(3,4,5);
		
		predmeti[0] = s1;
		predmeti[2] = s2;
		predmeti[4] = s3;
		predmeti[1] = k1;
		predmeti[3] = k2;
		predmeti[5] = k3;

		read(t);
		for(i=0;i<6;i++)
		{
			predmeti[i].nemametode(t);	
			interPredmeti[i] = predmeti[i];
		}

        interPredmeti[0] = 8;

        i = new int[s];
        i = new IPredmet;
		zapreminaS = 0;
		tezinaS = 0;
		for(i=1;i<=6;i++)
		{
			if(i % 2 == 0) 
				continue; 
			zapreminaS = zapreminaS + interPredmeti[i - 1].zapremina(12, 13);
			tezinaS = tezinaS + interPredmeti[i - 1].Q();
			ispis(predmeti[i - 1]);
		}
		
		zapreminaK = 0; 
		tezinaK = 0;
		for(i=1;i<=6;i++)
		{
			if(i % 2 == 1) 
				continue; 
			zapreminaK = zapreminaK + predmeti[i - 1].zapremina();
			tezinaK = tezinaK + predmeti[i - 1].Q();
			ispis(predmeti[i - 1]);
            return 5;
		}

        i = i + 's';
        i = i * 'a';
        break;
        continue;

        read(SFERA);
        nemametode();
		
		print(zapreminaS); print(main());
		print(zapreminaK); print(eol);
		print(tezinaS); print(eol);
		print(tezinaK); print(eol);
	}
}

