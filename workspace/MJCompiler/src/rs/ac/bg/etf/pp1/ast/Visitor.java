// generated with ast extension for cup
// version 0.8
// 1/1/2019 23:41:20


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(ArraySelector ArraySelector);
    public void visit(OptionalCommaNumConst OptionalCommaNumConst);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(OptionalRelopExpr OptionalRelopExpr);
    public void visit(ExprList ExprList);
    public void visit(ImplementsTypeList ImplementsTypeList);
    public void visit(ExtendsType ExtendsType);
    public void visit(Relop Relop);
    public void visit(OptionalMethodDeclList OptionalMethodDeclList);
    public void visit(DeclList DeclList);
    public void visit(Expr Expr);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(AndCondFactList AndCondFactList);
    public void visit(AddopTermList AddopTermList);
    public void visit(DesignatorSelectorList DesignatorSelectorList);
    public void visit(DesignatorSelector DesignatorSelector);
    public void visit(OrCondFactList OrCondFactList);
    public void visit(OptionalImplementsTypeList OptionalImplementsTypeList);
    public void visit(AssignConstList AssignConstList);
    public void visit(NewFactor NewFactor);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(TypeList TypeList);
    public void visit(OptionalExtendsType OptionalExtendsType);
    public void visit(PointSelector PointSelector);
    public void visit(OptionalArraySelector OptionalArraySelector);
    public void visit(Condition Condition);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(Assignop Assignop);
    public void visit(DesignatorCallParams DesignatorCallParams);
    public void visit(Type Type);
    public void visit(ReturnType ReturnType);
    public void visit(DesignatorStatementOption DesignatorStatementOption);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(IfStatement IfStatement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalAssignNum OptionalAssignNum);
    public void visit(ConstValue ConstValue);
    public void visit(OptionalDesignatorCallParams OptionalDesignatorCallParams);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(OptionalFormPars OptionalFormPars);
    public void visit(IdentOptionalAssignNumList IdentOptionalAssignNumList);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(OptionalElse OptionalElse);
    public void visit(ActPars ActPars);
    public void visit(OptionalMinus OptionalMinus);
    public void visit(ForStatement ForStatement);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(Designator Designator);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(TypeIdentBracketsList TypeIdentBracketsList);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(Term Term);
    public void visit(Decl Decl);
    public void visit(MulopModClass MulopModClass);
    public void visit(MulopDivClass MulopDivClass);
    public void visit(MulopMullClass MulopMullClass);
    public void visit(AddOpMinusClass AddOpMinusClass);
    public void visit(AddopPlusClass AddopPlusClass);
    public void visit(RelopLeClass RelopLeClass);
    public void visit(RelopLtClass RelopLtClass);
    public void visit(RelopGeClass RelopGeClass);
    public void visit(RelopGtClass RelopGtClass);
    public void visit(RelopNeqClass RelopNeqClass);
    public void visit(RelopEqClass RelopEqClass);
    public void visit(AssignOperationClass AssignOperationClass);
    public void visit(ArraySelectorClass ArraySelectorClass);
    public void visit(PointSelectorClass PointSelectorClass);
    public void visit(DesignatorSelectorArrayClass DesignatorSelectorArrayClass);
    public void visit(DesignatorSelectorPointClass DesignatorSelectorPointClass);
    public void visit(NoDesignatorSelectorListClass NoDesignatorSelectorListClass);
    public void visit(DesignatorSelectorListClass DesignatorSelectorListClass);
    public void visit(DesignatorClass DesignatorClass);
    public void visit(NoOptionalArraySelectorClass NoOptionalArraySelectorClass);
    public void visit(OptionalArraySelectorClass OptionalArraySelectorClass);
    public void visit(NewFactorClass NewFactorClass);
    public void visit(NoOptionalActParsClass NoOptionalActParsClass);
    public void visit(OptionalActParsClass OptionalActParsClass);
    public void visit(DesignatorCallParamsClass DesignatorCallParamsClass);
    public void visit(NoOptionalDesignatorCallParamsClass NoOptionalDesignatorCallParamsClass);
    public void visit(OptionalDesignatorCallParamsClass OptionalDesignatorCallParamsClass);
    public void visit(DesignatorFactorClass DesignatorFactorClass);
    public void visit(FactorExpressionClass FactorExpressionClass);
    public void visit(FactorNullClass FactorNullClass);
    public void visit(FactorNewClass FactorNewClass);
    public void visit(FactorBoolClass FactorBoolClass);
    public void visit(FactorCharClass FactorCharClass);
    public void visit(FactorIntClass FactorIntClass);
    public void visit(FactorDesignatorClass FactorDesignatorClass);
    public void visit(NoMulOperationFactorListClass NoMulOperationFactorListClass);
    public void visit(MulOperationFactorListClass MulOperationFactorListClass);
    public void visit(TermClass TermClass);
    public void visit(NoAddOperationtermListClass NoAddOperationtermListClass);
    public void visit(AddOperationtermListClass AddOperationtermListClass);
    public void visit(NoOptionalSubtractClass NoOptionalSubtractClass);
    public void visit(OptionalSubtractClass OptionalSubtractClass);
    public void visit(ExpressionClass ExpressionClass);
    public void visit(NoOptionalRelopExprClassClass NoOptionalRelopExprClassClass);
    public void visit(OptionalRelopExprClassClass OptionalRelopExprClassClass);
    public void visit(ConditionFactClass ConditionFactClass);
    public void visit(NoAndConditionFactListClass NoAndConditionFactListClass);
    public void visit(AndConditionFactListClass AndConditionFactListClass);
    public void visit(ConditionTermClass ConditionTermClass);
    public void visit(NoOrConditionFactListClass NoOrConditionFactListClass);
    public void visit(OrConditionFactListClass OrConditionFactListClass);
    public void visit(ConditionClass ConditionClass);
    public void visit(NoExpressionListClass NoExpressionListClass);
    public void visit(ExpressionListClass ExpressionListClass);
    public void visit(ActParamsClass ActParamsClass);
    public void visit(DesignatorStatementDecrementOptionClass DesignatorStatementDecrementOptionClass);
    public void visit(DesignatorStatementIncrementOptionClass DesignatorStatementIncrementOptionClass);
    public void visit(DesignatorStatementParamsOptionClass DesignatorStatementParamsOptionClass);
    public void visit(DesignatorStatementAssignOptionClass DesignatorStatementAssignOptionClass);
    public void visit(DesignatorStatementClass DesignatorStatementClass);
    public void visit(NoStatementListClass NoStatementListClass);
    public void visit(StatementListClass StatementListClass);
    public void visit(NoOptionalComaNumberConstClass NoOptionalComaNumberConstClass);
    public void visit(OptionalComaNumberConstClass OptionalComaNumberConstClass);
    public void visit(NoOptionalExprClass NoOptionalExprClass);
    public void visit(OptionalExprClass OptionalExprClass);
    public void visit(NoOptionalDesignatorStatementClass NoOptionalDesignatorStatementClass);
    public void visit(OptionalDesignatorStatementClass OptionalDesignatorStatementClass);
    public void visit(NoOptionalConditionClass NoOptionalConditionClass);
    public void visit(OptionalConditionClass OptionalConditionClass);
    public void visit(ForStatementClass ForStatementClass);
    public void visit(NoOptionalElseClass NoOptionalElseClass);
    public void visit(OptionalElseClass OptionalElseClass);
    public void visit(IfStatementClass IfStatementClass);
    public void visit(StatementStatementListClass StatementStatementListClass);
    public void visit(StatementPrintClass StatementPrintClass);
    public void visit(StatementReadClass StatementReadClass);
    public void visit(StatementReturnClass StatementReturnClass);
    public void visit(StatementContinueClass StatementContinueClass);
    public void visit(StatementBreakClass StatementBreakClass);
    public void visit(StatementForClass StatementForClass);
    public void visit(StatementIfClass StatementIfClass);
    public void visit(StatementDesignatorClass StatementDesignatorClass);
    public void visit(TypeCustom TypeCustom);
    public void visit(TypeChar TypeChar);
    public void visit(TypeBool TypeBool);
    public void visit(TypeInt TypeInt);
    public void visit(NoTypeIdentBracketsListClass NoTypeIdentBracketsListClass);
    public void visit(TypeIdentBracketsListClass TypeIdentBracketsListClass);
    public void visit(BracketsNO BracketsNO);
    public void visit(Brackets Brackets);
    public void visit(FromParamsClass FromParamsClass);
    public void visit(VariableDeclListNO VariableDeclListNO);
    public void visit(VariableDeclList VariableDeclList);
    public void visit(NoOptionalFormParsClass NoOptionalFormParsClass);
    public void visit(OptionalFormParsClass OptionalFormParsClass);
    public void visit(NoReturnTypeClass NoReturnTypeClass);
    public void visit(ReturnTypeClass ReturnTypeClass);
    public void visit(MethodDecl MethodDecl);
    public void visit(InterfaceMethodDeclarationClass InterfaceMethodDeclarationClass);
    public void visit(NoInterfaceMethodDeclListClass NoInterfaceMethodDeclListClass);
    public void visit(InterfaceMethodDeclListClass InterfaceMethodDeclListClass);
    public void visit(InterfaceDeclarationClass InterfaceDeclarationClass);
    public void visit(NoMethodDeclarationListClass NoMethodDeclarationListClass);
    public void visit(MethodDeclarationListClass MethodDeclarationListClass);
    public void visit(NoOptionalMethodDeclarationListClass NoOptionalMethodDeclarationListClass);
    public void visit(OptionalMethodDeclarationListClass OptionalMethodDeclarationListClass);
    public void visit(NoTypeListClass NoTypeListClass);
    public void visit(TypeListClass TypeListClass);
    public void visit(ImplementsTypeListClass ImplementsTypeListClass);
    public void visit(NoOptionalImplementsTypeListClass NoOptionalImplementsTypeListClass);
    public void visit(OptionalImplementsTypeListClass OptionalImplementsTypeListClass);
    public void visit(ExtendsTypeClass ExtendsTypeClass);
    public void visit(NoOptionalExtendsTypeClass NoOptionalExtendsTypeClass);
    public void visit(OptionalExtendsTypeClass OptionalExtendsTypeClass);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarName VarName);
    public void visit(VariableListEnd VariableListEnd);
    public void visit(VariableList VariableList);
    public void visit(VarDecl VarDecl);
    public void visit(NoIdentifierOptionalAssignNumberListClass NoIdentifierOptionalAssignNumberListClass);
    public void visit(IdentifierOptionalAssignNumberListClass IdentifierOptionalAssignNumberListClass);
    public void visit(AssignNum AssignNum);
    public void visit(NoOptionalAssgnNumberClass NoOptionalAssgnNumberClass);
    public void visit(OptionalAssgnNumberClass OptionalAssgnNumberClass);
    public void visit(EnumDecl EnumDecl);
    public void visit(ConstValueBool ConstValueBool);
    public void visit(ConstValueChar ConstValueChar);
    public void visit(ConstValueInt ConstValueInt);
    public void visit(AssignConstantListEnd AssignConstantListEnd);
    public void visit(AssignConstantList AssignConstantList);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclarationInterface DeclarationInterface);
    public void visit(DeclarationEnum DeclarationEnum);
    public void visit(DeclarationClass DeclarationClass);
    public void visit(DeclarationVar DeclarationVar);
    public void visit(Declaration Declaration);
    public void visit(DeclarationListNO DeclarationListNO);
    public void visit(DeclarationList DeclarationList);
    public void visit(Program Program);

}
