// generated with ast extension for cup
// version 0.8
// 4/1/2019 0:28:17


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ReturnType ReturnType);
    public void visit(Mulop Mulop);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(Relop Relop);
    public void visit(CondTermList CondTermList);
    public void visit(EnumAssignList EnumAssignList);
    public void visit(PrintNumParameter PrintNumParameter);
    public void visit(VarName VarName);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(StatementList StatementList);
    public void visit(Extends Extends);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(VarList VarList);
    public void visit(CondFactList CondFactList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(OptionalDesignatorStmnt OptionalDesignatorStmnt);
    public void visit(OptionalCond OptionalCond);
    public void visit(IfCond IfCond);
    public void visit(ConstValue ConstValue);
    public void visit(Implements Implements);
    public void visit(StandardFunction StandardFunction);
    public void visit(InterfaceList InterfaceList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(ConstAssignList ConstAssignList);
    public void visit(ConstAssign ConstAssign);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(EnumAssign EnumAssign);
    public void visit(OptionalMethodDeclList OptionalMethodDeclList);
    public void visit(Modulo Modulo);
    public void visit(Divide Divide);
    public void visit(Multiplie Multiplie);
    public void visit(Subtract Subtract);
    public void visit(Add Add);
    public void visit(LessEqual LessEqual);
    public void visit(Less Less);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Assignop Assignop);
    public void visit(DesignatorArrayAccess DesignatorArrayAccess);
    public void visit(DesignatorPointAccess DesignatorPointAccess);
    public void visit(DesignatorName DesignatorName);
    public void visit(FactorExpression FactorExpression);
    public void visit(FactorNull FactorNull);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorNewObj FactorNewObj);
    public void visit(FactorConst FactorConst);
    public void visit(FactorFunctionCall FactorFunctionCall);
    public void visit(FactorStandardFunction FactorStandardFunction);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermMulop TermMulop);
    public void visit(TermFactor TermFactor);
    public void visit(ExprERR ExprERR);
    public void visit(ExprAddop ExprAddop);
    public void visit(ExprNegativeTerm ExprNegativeTerm);
    public void visit(ExprTerm ExprTerm);
    public void visit(CondFactCompare CondFactCompare);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(ConditionFactListNO ConditionFactListNO);
    public void visit(ConditionFactList ConditionFactList);
    public void visit(CondTerm CondTerm);
    public void visit(ConditionTermListNO ConditionTermListNO);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(Condition Condition);
    public void visit(ActParametersNO ActParametersNO);
    public void visit(ActParameters ActParameters);
    public void visit(ActParameter ActParameter);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorFunctionCall DesignatorFunctionCall);
    public void visit(DesignatorStandardFunction DesignatorStandardFunction);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(StatementsNO StatementsNO);
    public void visit(Statements Statements);
    public void visit(PrintNumberParameterNO PrintNumberParameterNO);
    public void visit(PrintNumberParameter PrintNumberParameter);
    public void visit(OptionalDesignatorStatementNO OptionalDesignatorStatementNO);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(OptionalConditionNO OptionalConditionNO);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(ForStart ForStart);
    public void visit(ForStatement ForStatement);
    public void visit(IfCondition IfCondition);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(StatementBlock StatementBlock);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementFor StatementFor);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(StandardFunctionLen StandardFunctionLen);
    public void visit(StandardFunctionOrd StandardFunctionOrd);
    public void visit(StandardFunctionChr StandardFunctionChr);
    public void visit(TypeCustom TypeCustom);
    public void visit(TypeChar TypeChar);
    public void visit(TypeBool TypeBool);
    public void visit(TypeInt TypeInt);
    public void visit(BracketsNO BracketsNO);
    public void visit(Brackets Brackets);
    public void visit(VariableDeclListNO VariableDeclListNO);
    public void visit(VariableDeclList VariableDeclList);
    public void visit(FormPar FormPar);
    public void visit(FormalParametersNO FormalParametersNO);
    public void visit(FormalParameter FormalParameter);
    public void visit(FormalParameters FormalParameters);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnT ReturnT);
    public void visit(MethodVarsEnd MethodVarsEnd);
    public void visit(MethodStart MethodStart);
    public void visit(MethodDecl MethodDecl);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(InterfaceMethodDeclarationsNO InterfaceMethodDeclarationsNO);
    public void visit(InterfaceMethodDeclarations InterfaceMethodDeclarations);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(MethodDeclarationsNO MethodDeclarationsNO);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(MethodDeclarationListNO MethodDeclarationListNO);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(InterfacesNO InterfacesNO);
    public void visit(Interface Interface);
    public void visit(Interfaces Interfaces);
    public void visit(ImplementsListNO ImplementsListNO);
    public void visit(ImplementsList ImplementsList);
    public void visit(ExtendsTypeNO ExtendsTypeNO);
    public void visit(ExtendsERR ExtendsERR);
    public void visit(ExtendsType ExtendsType);
    public void visit(ClassVarDeclList ClassVarDeclList);
    public void visit(ClassStart ClassStart);
    public void visit(ClassDecl ClassDecl);
    public void visit(VariableNameEmptyERR VariableNameEmptyERR);
    public void visit(VariableNameERR VariableNameERR);
    public void visit(VariableName VariableName);
    public void visit(VariableListEnd VariableListEnd);
    public void visit(VariableList VariableList);
    public void visit(VariableDeclERR VariableDeclERR);
    public void visit(VariableDecl VariableDecl);
    public void visit(EnumNameAssign EnumNameAssign);
    public void visit(EnumName EnumName);
    public void visit(EnumerationAssignEnd EnumerationAssignEnd);
    public void visit(EnumerationAssign EnumerationAssign);
    public void visit(EnumStart EnumStart);
    public void visit(EnumDecl EnumDecl);
    public void visit(ConstValueBool ConstValueBool);
    public void visit(ConstValueChar ConstValueChar);
    public void visit(ConstValueInt ConstValueInt);
    public void visit(ConstantAssignERR ConstantAssignERR);
    public void visit(ConstantAssign ConstantAssign);
    public void visit(ConstantAssignListEnd ConstantAssignListEnd);
    public void visit(ConstantAssignList ConstantAssignList);
    public void visit(ConstantDeclERR ConstantDeclERR);
    public void visit(ConstantDecl ConstantDecl);
    public void visit(DeclarationInterface DeclarationInterface);
    public void visit(DeclarationEnum DeclarationEnum);
    public void visit(DeclarationClass DeclarationClass);
    public void visit(DeclarationVar DeclarationVar);
    public void visit(DeclarationConst DeclarationConst);
    public void visit(DeclarationListNO DeclarationListNO);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgramStart ProgramStart);
    public void visit(Program Program);

}
